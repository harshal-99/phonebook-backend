{"version":3,"sources":["components/Names.js","components/PersonForm.js","services/utils.js","components/Notification.js","App.js","index.js"],"names":["Names","props","person","map","per","className","name","number","onClick","window","confirm","deletePerson","id","setSuccessMessage","setTimeout","PersonForm","onSubmit","addName","type","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","baseUrl","utils","getAll","axios","get","then","res","data","create","newPerson","post","delete","updatePerson","newData","put","Notification","message","App","useState","setPerson","setNewName","setNewNumber","search","setSearch","searchResult","setSearchResult","successMessage","useEffect","initialPerson","event","target","filter","toLowerCase","includes","preventDefault","foundPerson","find","returnedPerson","prevState","newArray","val","i","length","catch","error","response","status","Math","random","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1466421b.chunk.js","sourcesContent":["const Names = (props) => {\r\n\r\n\treturn (\r\n\t\t<ul>\r\n\t\t\t{props.person.map(per =>\r\n\t\t\t\t<li key={per.id} className=\"person\">\r\n\t\t\t\t\t{per.name} {per.number}\r\n\t\t\t\t\t<button onClick={() => {\r\n\t\t\t\t\t\tif (window.confirm(`Delete ${per.name} ?`)) {\r\n\t\t\t\t\t\t\tprops.deletePerson(per.id)\r\n\t\t\t\t\t\t\tprops.setSuccessMessage(`Deleted ${per.name}`)\r\n\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\tprops.setSuccessMessage(null)\r\n\t\t\t\t\t\t\t}, 5000)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\tdelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>)}\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\nexport default Names","const PersonForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.addName}>\r\n\t\t\t<div>\r\n\t\t\t\t<div> name: <input type=\"text\" value={props.newName}\r\n\t\t\t\t                   onChange={props.handleNameChange}/></div>\r\n\t\t\t\t<div>number: <input type=\"text\" value={props.newNumber}\r\n\t\t\t\t                    onChange={props.handleNumberChange}/></div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button type=\"submit\">add</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default PersonForm","import axios from \"axios\";\r\n\r\nconst baseUrl = \"http://localhost:3001/api/persons\"\r\n\r\nconst getAll = () => {\r\n\tconst req = axios.get(baseUrl)\r\n\treturn req.then(res => res.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n\tconst req = axios.post(baseUrl, newPerson)\r\n\treturn req.then(res => res.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n\tconst req = axios.delete(`${baseUrl}/${id}`)\r\n\treturn req.then(res => res.data)\r\n}\r\n\r\nconst updatePerson = (id, newData) => {\r\n\tconst req = axios.put(`${baseUrl}/${id}`, newData)\r\n\treturn req.then(res => res.data)\r\n}\r\n\r\nconst utils = {getAll, create, deletePerson, updatePerson}\r\n\r\nexport default utils","const Notification = ({ message }) => {\r\n  if(message === null) return null\r\n\r\n\treturn (\r\n\t\t<div className=\"success\">\r\n\t\t\t{message}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Notification","import { useEffect, useState } from \"react\";\n\nimport Names      from \"./components/Names\";\nimport PersonForm from \"./components/PersonForm\";\n\nimport utils        from \"./services/utils\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n\tconst [ person, setPerson ] = useState([])\n\tconst [ newName, setNewName ] = useState(\"\")\n\tconst [ newNumber, setNewNumber ] = useState(\"\")\n\tconst [ search, setSearch ] = useState(\"\")\n\tconst [ searchResult, setSearchResult ] = useState([])\n\tconst [ successMessage, setSuccessMessage ] = useState(null)\n\n\tuseEffect(() => {\n\t\tutils\n\t\t\t.getAll()\n\t\t\t.then(initialPerson => {\n\t\t\t\tsetPerson(initialPerson)\n\t\t\t})\n\t}, [])\n\n\n\tconst addName = (event) => {\n\t\tevent.preventDefault()\n\t\tconst foundPerson = person.find(name => name.name === newName)\n\t\tif (foundPerson) {\n\t\t\tlet message = null\n\t\t\tif (window.confirm(`${newName} already added to phonebook, replace old number with new one ?`)) {\n\t\t\t\tutils\n\t\t\t\t\t.updatePerson(foundPerson.id, {\n\t\t\t\t\t\tnumber: newNumber,\n\t\t\t\t\t\tname: foundPerson.name\n\t\t\t\t\t})\n\t\t\t\t\t.then(returnedPerson => {\n\t\t\t\t\t\tsetPerson(prevState => {\n\t\t\t\t\t\t\tconst newArray = prevState.map(val => val)\n\t\t\t\t\t\t\tfor (let i = 0; i < newArray.length; i++) {\n\t\t\t\t\t\t\t\tif (newArray[i].name === returnedPerson.name) {\n\t\t\t\t\t\t\t\t\tnewArray[i].number = returnedPerson.number\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn newArray\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tif (error.response.status === 404) {\n\t\t\t\t\t\t\tmessage = `${foundPerson.name} doesn't exists.`\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\tsetSuccessMessage(message\n\t\t\t\t\t? message\n\t\t\t\t\t: `Updated ${foundPerson.name}`)\n\t\t\t}\n\t\t} else {\n\t\t\tutils\n\t\t\t\t.create({\n\t\t\t\t\tname: newName,\n\t\t\t\t\tnumber: newNumber,\n\t\t\t\t\tid: Math.random() * 100\n\t\t\t\t})\n\t\t\t\t.then(returnedPerson => {\n\t\t\t\t\tsetPerson(person.concat(returnedPerson))\n\t\t\t\t\tsetSuccessMessage(`Added ${returnedPerson.name}`)\n\t\t\t\t})\n\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tsetSuccessMessage(null)\n\t\t}, 5000)\n\t\tsetNewName(\"\")\n\t\tsetNewNumber(\"\")\n\t}\n\n\tconst handleNumberChange = (event) => {\n\t\tsetNewNumber(event.target.value)\n\t}\n\n\tconst handleNameChange = (event) => {\n\t\tsetNewName(event.target.value)\n\t}\n\n\tconst handleSearchChange = (event) => {\n\t\tsetSearch(event.target.value)\n\t\tsetSearchResult(person.filter(per =>\n\t\t\tper.name.toLowerCase()\n\t\t\t\t.includes(search.toLowerCase())))\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Phonebook</h2>\n\t\t\t<Notification message={successMessage}/>\n\t\t\t<div>\n\t\t\t\t<div>filter shown with</div>\n\t\t\t\t<div><input type=\"text\" value={search}\n\t\t\t\t            onChange={handleSearchChange}/></div>\n\t\t\t\t<ul>\n\t\t\t\t\t{searchResult.map(res => <li key={res.id}>{res.name}</li>)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<h3>Add a new</h3>\n\t\t\t<PersonForm addName={addName} newName={newName}\n\t\t\t            handleNameChange={handleNameChange}\n\t\t\t            handleNumberChange={handleNumberChange}\n\t\t\t            newNumber={newNumber}\n\t\t\t/>\n\t\t\t<h2>Numbers</h2>\n\t\t\t<Names person={person} deletePerson={utils.deletePerson}\n\t\t\t       setSuccessMessage={setSuccessMessage}/>\n\t\t</div>\n\t)\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}